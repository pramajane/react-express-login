{"version":3,"sources":["utils/setAuthToken.js","actions/authAction.js","actions/actionTypes.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store/store.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/auth/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","Navbar","className","to","style","fontFamily","Component","Landing","height","width","borderRadius","letterSpacing","Register","onChange","e","setState","target","id","value","onSubmit","preventDefault","newUser","username","email","password","confirm_password","props","registerUser","history","nextProps","this","push","paddingLeft","noValidate","error","classnames","invalid","htmlFor","marginTop","connect","erros","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","errros","setItem","jwt_decode","component","rest","render","Dashboard","onLogOutClick","console","log","onClick","jwtToken","currentTime","Date","now","exp","location","href","App","exact","path","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cc3428ea.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setAuthToken = token => {\n    if(token) {\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token.token}`;\n    }\n    else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n}\n\nexport default setAuthToken;","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\"\nimport jwt_decode from \"jwt-decode\"\n\nimport * as actionTypes from \"./actionTypes\";\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n    axios.post(\"/user\", userData)\n        .then(res => history.push(\"/login\"))\n        .catch(err => \n            dispatch({\n                type: actionTypes.GET_ERRORS,\n                payload: err.response.data\n            }))\n}\n\n\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n    axios\n      .post(\"/user/login\", userData)\n      .then(res => {\n        // Save to localStorage\n        // Set token to localStorage\n        const { token } = res.data;\n        localStorage.setItem(\"jwtToken\", token);\n        // Set token to Auth header\n        setAuthToken(token);\n        // Decode token to get user data\n        const decoded = jwt_decode(token);\n        // Set current user\n        dispatch(setCurrentUser(decoded));\n      })\n      .catch(err =>\n        dispatch({\n          type: actionTypes.GET_ERRORS,\n          payload: err.response.data\n        })\n      );\n  };\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n    return {\n        type: actionTypes.SET_CURRENT_USER,\n        payload: decoded\n    }\n}\n\n\n// User loading\nexport const setUserLoading= () => {\n    return {\n        type: actionTypes.USER_LOADING\n    }\n}\n\n// Log Out User\nexport const logoutUser = () => dispatch => {\n    localStorage.removeItem(\"jwtToken\")\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n};\n\n\n","export const SET_CURRENT_USER = \"SET_CURRENT_USER\"\nexport const USER_LOADING = \"USER_LOADING\"\nexport const GET_ERRORS = \"GET_ERRORS\"","import {\n    SET_CURRENT_USER,\n    USER_LOADING\n} from \"../actions/actionTypes\"\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n    isAuthenticated: false,   \n    user: {},\n    loading: false\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case USER_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        default: \n            return state;\n    }\n}","import { GET_ERRORS } from \"../actions/actionTypes\"\n\nconst initialState = {};\n\nexport default function(state= initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n","import { combineReducers } from \"redux\";\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer'\n\nexport default combineReducers({\n    auth: authReducer,\n    errors: errorReducer\n})","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\"\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__&&\n        window.__REDUX_DEVTOOLS_EXTENSION__()       \n    )\n);\n\nexport default store;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <div className=\"navbar-fixed\">\n                <nav className=\"z-depth-0\">\n                    <div className=\"nav-wrapper white\">\n                        <Link\n                            to=\"/\"\n                            style={{\n                                fontFamily: \"monospace\"\n                            }}\n                            className=\"col s5 brand-logo center black-text\"\n                        >\n                            <i className=\"material-icons\">code</i>\n                            MY APP    \n                        </Link>\n                    </div>\n                </nav>\n            </div>\n        )\n    }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Landing extends Component {\n    render() {\n        return (\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <h4>\n                            <b style={{ fontFamily: \"monospace\"}}>\n                                Please register before using the app\n                            </b>\n                            <p> Fill the form with spesific informations</p>\n                            <br/>\n                            <div className=\"col s6\">\n                                <Link\n                                    to=\"/register\"\n                                    style={{\n                                        width: \"140px\",\n                                        borderRadius: \"3px\",\n                                        letterSpacing: \"1.5px\"\n                                    }}\n                                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                                >\n                                    Register\n                                </Link>\n                            </div>\n                            <div className=\"col s6\">\n                                <Link\n                                    to=\"/login\"\n                                    style={{\n                                        width: \"140px\",\n                                        borderRadius: \"3px\",\n                                        letterSpacing: \"1.5px\"\n                                    }}\n                                    className=\"btn btn-large btn-flat waves-effect white black-text\"\n                                >\n                                    Log In\n                                </Link>\n                            </div>\n                        </h4>\n                    </div>    \n                </div>                  \n            </div>\n        )\n    }\n}\n\nexport default Landing;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { registerUser } from \"../../actions/authAction\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            confirm_password: \"\",\n            errors: {}\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            })\n        }\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value })\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n\n        const newUser = {\n            username: this.state.username,\n            email: this.state.email,\n            password: this.state.password,\n            confirm_password: this.state.confirm_password\n        }\n\n        this.props.registerUser(newUser,this.props.history);\n    }\n\n    componentDidMount() {\n        // If logged in and user navigates to Register page, should redirect them to dashboard\n        if (this.props.auth.isAuthenticated) {\n          this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    render() {\n        const { errors } = this.state;\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col s8 offset-s2\">\n                        <Link\n                            to='/' className=\"btn-flat waves-effect\"\n                        >\n                            <i className=\"material-icons left\">keyboard_backspace</i>\n                            Back To Home\n                        </Link>\n                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                            <h4>\n                                <b>\n                                    Register \n                                </b>\n                                below\n                            </h4>\n                            <p>\n                                Already have an account?\n                                <Link\n                                    to=\"/login\"\n                                >\n                                    Login\n                                </Link>\n                            </p>\n                        </div>\n                        <form noValidate onSubmit={this.onSubmit}>\n                            <div className=\"input-field col s12\">\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.username}\n                                    error={errors.username}\n                                    id=\"username\"\n                                    type=\"text\" \n                                    className={classnames(\"\", {invalid: errors.username})}\n                                />\n                                <label htmlFor=\"username\">Username</label>\n                                <span className=\"red-text\">{errors.username}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.email}\n                                    error={errors.email}\n                                    id=\"email\"\n                                    type=\"email\" \n                                    className={classnames(\"\", {invalid: errors.email})}\n                                />\n                                <label htmlFor=\"email\">Email</label>\n                                <span className=\"red-text\">{errors.email}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.password}\n                                    error={errors.password}\n                                    id=\"password\"\n                                    type=\"password\"\n                                    className={classnames(\"\", {invalid: errors.password})}\n                                />\n                                <label htmlFor=\"password\">Password</label>\n                                <span className=\"red-text\">{errors.password}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.confirm_password}\n                                    error={errors.confirm_password}\n                                    id=\"confirm_password\"\n                                    type=\"password\"\n                                    className={classnames(\"\", {invalid: errors.confirm_password})}\n                                />\n                                <label htmlFor=\"confirm_password\">Confirm Password</label>\n                                <span className=\"red-text\">{errors.confirm_password}</span>\n                            </div>\n                            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                                <button\n                                    style={{\n                                        width: \"150px\",\n                                        borderRadius: \"3px\",\n                                        letterSpacing: \"1.5px\",\n                                        marginTop: \"1rem\"\n                                    }}\n                                    type=\"submit\"\n                                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                                >\n                                    Sign Up\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>                \n            </div>\n        )\n    }\n}\n\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    erros: state.errors\n})\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { loginUser } from '../../actions/authAction'\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            email: \"\",\n            password: \"\",\n            errors: {}\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.auth.isAuthenticated) {\n            // direct user to dashboard screen after login\n            this.props.history.push(\"/dashboard\");            \n        }\n\n            // return error response if user is not exist\n        if (nextProps.errros) {\n            this.setState({\n                errors: nextProps.errors\n            })\n        }\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value} )\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        }\n        this.props.loginUser(userData)\n    }\n\n    componentDidMount() {\n        // If logged in and user navigates to Login page, should redirect them to dashboard\n        if (this.props.auth.isAuthenticated) {\n          this.props.history.push(\"/dashboard\");\n        }\n    }\n\n\n    render() {\n\n        const { errors } = this.state\n\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\" style={{ marginTop: \"4rem\" }}>\n                    <div className=\"col s8 offset-s2\">\n                        <Link\n                            to=\"/\"\n                            className=\"btn-flat waves-effect\"\n                        >\n                            <i className=\"material-icons left\">keyboard_backspace</i>\n                            Back To Home\n                        </Link>\n                        <div className=\"col s12\"  style={{ paddingLeft: \"11.250px\" }}>\n                            <h4>\n                                <b>Login</b> below\n                            </h4>\n                            <p className=\"grey-text text-darken-1\">Don't have an account?\n                                <Link\n                                    to=\"/register\"\n                                >\n                                    Register\n                                </Link>\n                            </p>\n                        </div>\n                        <form noValidate onSubmit={this.onSubmit}>\n                            <div className=\"input-field col s12\">\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.email}\n                                    error={errors.email}\n                                    id=\"email\"\n                                    type=\"email\"\n                                    className={ classnames(\"\", { invalid: errors.email})}\n                                />\n                                <label htmlFor=\"email\">Email</label>\n                                <span className=\"red-text\">{errors.email}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.password}\n                                    error={errors.password}\n                                    id=\"password\"\n                                    type=\"password\" \n                                    className={ classnames(\"\", { invalid: errors.password})}\n                                />\n                                <label htmlFor=\"password\">Password</label>\n                                <span className=\"red=text\">{errors.password}</span>\n                            </div>\n                            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                                <button\n                                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n\n                                    style={{\n                                        width: \"150px\",\n                                        borderRadius: \"3px\",\n                                        letterSpacing: \"1.5px\",\n                                        marginTop: \"1rem\"\n                                    }}\n                                    type=\"submit\"\n                                >\n                                    Login\n                                </button>\n                            </div>                        \n                        </form>\n                    </div>\n\n\n                </div>\n\n            </div>\n        )\n    }\n}\n\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n\n    auth: state.auth, // receive states from authReducer\n    errors: state.errors // receive states from errorReducer\n})\n\nexport default connect(mapStateToProps, { loginUser })(Login);","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            auth.isAuthenticated === true ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to=\"/login\" />\n            )\n        }\n    />\n\n)\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { logoutUser } from \"../../actions/authAction\";\n\nclass Dashboard extends Component {\n    onLogOutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    }\n\n    render() {\n        const { user } = this.props.auth\n        console.log({user})\n\n        return(\n            <div style={{height: \"72vh\"}} className=\"container valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <h4>\n                            <b>You are logged in,</b>{user.username}\n                        </h4>\n                        <button\n                            style={{\n                                width: \"150px\",\n                                borderRadius: \"3px\",\n                                letterSpacing: \"1.5px\",\n                                marginTop: \"1rem\"\n                            }}                                \n                            className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                            onClick={this.onLogOutClick}\n                        >\n                            Log Out\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nDashboard.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\n\nconst MapStateToProps = state => ({\n    auth : state.auth\n})\n\nexport default connect(MapStateToProps, {logoutUser})(Dashboard);","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom'\n\n// Related to authentication\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from './actions/authAction';\n\n// Related to store\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\n// Importing components\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport PrivateRoute from './components/private-route/PrivateRoute';\nimport Dashboard from './components/auth/Dashboard'\n\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n    // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if ( decoded.exp < currentTime ) {\n    // Logout.user\n    store.dispatch(logoutUser());\n\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Switch>\n                <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}